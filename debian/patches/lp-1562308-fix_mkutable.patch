Description: fix east asian character width
Bug-Ubuntu: #1562308
Origin: http://www.greenwoodsoftware.com/less/news.487.html
Applied-Upstream: less-487
Index: less-481/Makefile.aut
===================================================================
--- less-481.orig/Makefile.aut
+++ less-481/Makefile.aut
@@ -111,7 +111,7 @@ compose.uni: unicode/UnicodeData.txt
 ubin.uni: unicode/UnicodeData.txt
 	./mkutable -f2 Cc Cf Cs Co Zl Zp -- unicode/UnicodeData.txt > $@
 wide.uni: unicode/EastAsianWidth.txt
-	./mkutable -f1 W -- unicode/EastAsianWidth.txt > $@
+	./mkutable -f1 W F -- unicode/EastAsianWidth.txt > $@
 
 distfiles: ${DISTFILES}
 
Index: less-481/compose.uni
===================================================================
--- less-481.orig/compose.uni
+++ less-481/compose.uni
@@ -1,4 +1,4 @@
-/* Generated by "./mkutable -f2 Mn Me -- unicode/UnicodeData.txt" on Mon Jul 14 16:21:21 PDT 2014 */
+/* Generated by "./mkutable -f2 Mn Me -- unicode/UnicodeData.txt" on Tue Sep 20 10:51:43 PDT 2016 */
 	{ 0x0300, 0x036f }, /* Mn */
 	{ 0x0483, 0x0487 }, /* Mn */
 	{ 0x0488, 0x0489 }, /* Me */
@@ -23,7 +23,8 @@
 	{ 0x0825, 0x0827 }, /* Mn */
 	{ 0x0829, 0x082d }, /* Mn */
 	{ 0x0859, 0x085b }, /* Mn */
-	{ 0x08e4, 0x0902 }, /* Mn */
+	{ 0x08d4, 0x08e1 }, /* Mn */
+	{ 0x08e3, 0x0902 }, /* Mn */
 	{ 0x093a, 0x093a }, /* Mn */
 	{ 0x093c, 0x093c }, /* Mn */
 	{ 0x0941, 0x0948 }, /* Mn */
@@ -117,6 +118,7 @@
 	{ 0x17c9, 0x17d3 }, /* Mn */
 	{ 0x17dd, 0x17dd }, /* Mn */
 	{ 0x180b, 0x180d }, /* Mn */
+	{ 0x1885, 0x1886 }, /* Mn */
 	{ 0x18a9, 0x18a9 }, /* Mn */
 	{ 0x1920, 0x1922 }, /* Mn */
 	{ 0x1927, 0x1928 }, /* Mn */
@@ -156,7 +158,7 @@
 	{ 0x1cf4, 0x1cf4 }, /* Mn */
 	{ 0x1cf8, 0x1cf9 }, /* Mn */
 	{ 0x1dc0, 0x1df5 }, /* Mn */
-	{ 0x1dfc, 0x1dff }, /* Mn */
+	{ 0x1dfb, 0x1dff }, /* Mn */
 	{ 0x20d0, 0x20dc }, /* Mn */
 	{ 0x20dd, 0x20e0 }, /* Me */
 	{ 0x20e1, 0x20e1 }, /* Mn */
@@ -170,13 +172,13 @@
 	{ 0xa66f, 0xa66f }, /* Mn */
 	{ 0xa670, 0xa672 }, /* Me */
 	{ 0xa674, 0xa67d }, /* Mn */
-	{ 0xa69f, 0xa69f }, /* Mn */
+	{ 0xa69e, 0xa69f }, /* Mn */
 	{ 0xa6f0, 0xa6f1 }, /* Mn */
 	{ 0xa802, 0xa802 }, /* Mn */
 	{ 0xa806, 0xa806 }, /* Mn */
 	{ 0xa80b, 0xa80b }, /* Mn */
 	{ 0xa825, 0xa826 }, /* Mn */
-	{ 0xa8c4, 0xa8c4 }, /* Mn */
+	{ 0xa8c4, 0xa8c5 }, /* Mn */
 	{ 0xa8e0, 0xa8f1 }, /* Mn */
 	{ 0xa926, 0xa92d }, /* Mn */
 	{ 0xa947, 0xa951 }, /* Mn */
@@ -203,7 +205,7 @@
 	{ 0xabed, 0xabed }, /* Mn */
 	{ 0xfb1e, 0xfb1e }, /* Mn */
 	{ 0xfe00, 0xfe0f }, /* Mn */
-	{ 0xfe20, 0xfe2d }, /* Mn */
+	{ 0xfe20, 0xfe2f }, /* Mn */
 	{ 0x101fd, 0x101fd }, /* Mn */
 	{ 0x102e0, 0x102e0 }, /* Mn */
 	{ 0x10376, 0x1037a }, /* Mn */
@@ -224,16 +226,21 @@
 	{ 0x11173, 0x11173 }, /* Mn */
 	{ 0x11180, 0x11181 }, /* Mn */
 	{ 0x111b6, 0x111be }, /* Mn */
+	{ 0x111ca, 0x111cc }, /* Mn */
 	{ 0x1122f, 0x11231 }, /* Mn */
 	{ 0x11234, 0x11234 }, /* Mn */
 	{ 0x11236, 0x11237 }, /* Mn */
+	{ 0x1123e, 0x1123e }, /* Mn */
 	{ 0x112df, 0x112df }, /* Mn */
 	{ 0x112e3, 0x112ea }, /* Mn */
-	{ 0x11301, 0x11301 }, /* Mn */
+	{ 0x11300, 0x11301 }, /* Mn */
 	{ 0x1133c, 0x1133c }, /* Mn */
 	{ 0x11340, 0x11340 }, /* Mn */
 	{ 0x11366, 0x1136c }, /* Mn */
 	{ 0x11370, 0x11374 }, /* Mn */
+	{ 0x11438, 0x1143f }, /* Mn */
+	{ 0x11442, 0x11444 }, /* Mn */
+	{ 0x11446, 0x11446 }, /* Mn */
 	{ 0x114b3, 0x114b8 }, /* Mn */
 	{ 0x114ba, 0x114ba }, /* Mn */
 	{ 0x114bf, 0x114c0 }, /* Mn */
@@ -241,6 +248,7 @@
 	{ 0x115b2, 0x115b5 }, /* Mn */
 	{ 0x115bc, 0x115bd }, /* Mn */
 	{ 0x115bf, 0x115c0 }, /* Mn */
+	{ 0x115dc, 0x115dd }, /* Mn */
 	{ 0x11633, 0x1163a }, /* Mn */
 	{ 0x1163d, 0x1163d }, /* Mn */
 	{ 0x1163f, 0x11640 }, /* Mn */
@@ -248,6 +256,16 @@
 	{ 0x116ad, 0x116ad }, /* Mn */
 	{ 0x116b0, 0x116b5 }, /* Mn */
 	{ 0x116b7, 0x116b7 }, /* Mn */
+	{ 0x1171d, 0x1171f }, /* Mn */
+	{ 0x11722, 0x11725 }, /* Mn */
+	{ 0x11727, 0x1172b }, /* Mn */
+	{ 0x11c30, 0x11c36 }, /* Mn */
+	{ 0x11c38, 0x11c3d }, /* Mn */
+	{ 0x11c3f, 0x11c3f }, /* Mn */
+	{ 0x11c92, 0x11ca7 }, /* Mn */
+	{ 0x11caa, 0x11cb0 }, /* Mn */
+	{ 0x11cb2, 0x11cb3 }, /* Mn */
+	{ 0x11cb5, 0x11cb6 }, /* Mn */
 	{ 0x16af0, 0x16af4 }, /* Mn */
 	{ 0x16b30, 0x16b36 }, /* Mn */
 	{ 0x16f8f, 0x16f92 }, /* Mn */
@@ -257,5 +275,17 @@
 	{ 0x1d185, 0x1d18b }, /* Mn */
 	{ 0x1d1aa, 0x1d1ad }, /* Mn */
 	{ 0x1d242, 0x1d244 }, /* Mn */
+	{ 0x1da00, 0x1da36 }, /* Mn */
+	{ 0x1da3b, 0x1da6c }, /* Mn */
+	{ 0x1da75, 0x1da75 }, /* Mn */
+	{ 0x1da84, 0x1da84 }, /* Mn */
+	{ 0x1da9b, 0x1da9f }, /* Mn */
+	{ 0x1daa1, 0x1daaf }, /* Mn */
+	{ 0x1e000, 0x1e006 }, /* Mn */
+	{ 0x1e008, 0x1e018 }, /* Mn */
+	{ 0x1e01b, 0x1e021 }, /* Mn */
+	{ 0x1e023, 0x1e024 }, /* Mn */
+	{ 0x1e026, 0x1e02a }, /* Mn */
 	{ 0x1e8d0, 0x1e8d6 }, /* Mn */
+	{ 0x1e944, 0x1e94a }, /* Mn */
 	{ 0xe0100, 0xe01ef }, /* Mn */
Index: less-481/mkutable
===================================================================
--- less-481.orig/mkutable
+++ less-481/mkutable
@@ -4,14 +4,14 @@ use strict;
 my $USAGE = <<__EOF__;
    usage: mkutable [-n] [-f#] type... [--] [<] UnicodeData.txt
           -n = take non-matching types
-	  -f = zero-based type field (default 2)
+      -f = zero-based type field (default 2)
 __EOF__
 
 use vars qw( $opt_f $opt_n );
 use Getopt::Std;
 my $type_field = 2;
 
-exit (main() ? 1 : 0);
+exit (main() ? 0 : 1);
 
 sub main {
     my $date = `date`;
@@ -28,48 +28,58 @@ sub main {
         $types{$arg} = 1;
     }
     my %out = ( 'types' => \%types );
-    my $last_code = 0;
 
     print $header;
+    my $last_code = 0;
     while (<>) {
         chomp;
         s/#.*//;
         my @fields = split /;/;
         next if not @fields;
-        my $code = hex $fields[0];
+        my ($lo_code, $hi_code);
+        my $codes = $fields[0];
+        if ($codes =~ /(\w+)\.\.(\w+)/) {
+            $lo_code = hex $1;
+            $hi_code = hex $2;
+        } else {
+            $lo_code = $hi_code = hex $fields[0];
+        }
         my $type = $fields[$type_field];
         $type =~ s/\s//g;
-        while (++$last_code < $code) {
-            output(\%out, $last_code, '?');
+        for ($last_code = $lo_code; $last_code <= $hi_code; ++$last_code) {
+            output(\%out, $last_code, $type);
         }
-        output(\%out, $code, $type);
     }
-    output(\%out, $last_code+1, '?');
+    output(\%out, $last_code);
+    return 1;
 }
 
 sub output {
     my ($out, $code, $type) = @_;
-    my $match = ${${$out}{types}}{$type};
-    my $type_change = (not $$out{start_type} or $type ne $$out{start_type});
-    $match = not $match if $opt_n;
-    if ($match and (not $$out{in_run} or $type_change)) {
-        end_run($out, $code-1);
+    my $type_ok = ($type and ${${$out}{types}}{$type});
+    $type_ok = not $type_ok if $opt_n;
+    my $prev_code = $$out{prev_code};
+
+    if (not $type_ok) {
+        end_run($out, $prev_code);
+    } elsif (not $$out{in_run} or $type ne $$out{run_type} or $code != $prev_code+1) {
+        end_run($out, $prev_code);
         start_run($out, $code, $type);
-    } elsif (not $match and $$out{in_run}) {
-        end_run($out, $code-1);
     }
+    $$out{prev_code} = $code;
 }
 
 sub start_run {
     my ($out, $code, $type) = @_;
     $$out{start_code} = $code;
-    $$out{start_type} = $type;
+    $$out{prev_code} = $code;
+    $$out{run_type} = $type;
     $$out{in_run} = 1;
 }
 
 sub end_run {
     my ($out, $code) = @_;
     return if not $$out{in_run};
-    printf "\t{ 0x%04x, 0x%04x }, /* %s */\n", $$out{start_code}, $code, $$out{start_type};
+    printf "\t{ 0x%04x, 0x%04x }, /* %s */\n", $$out{start_code}, $code, $$out{run_type};
     $$out{in_run} = 0;
 }
Index: less-481/ubin.uni
===================================================================
--- less-481.orig/ubin.uni
+++ less-481/ubin.uni
@@ -1,4 +1,4 @@
-/* Generated by "./mkutable -f2 Cc Cf Cs Co Zl Zp -- unicode/UnicodeData.txt" on Mon Jul 14 16:21:22 PDT 2014 */
+/* Generated by "./mkutable -f2 Cc Cf Cs Co Zl Zp -- unicode/UnicodeData.txt" on Tue Sep 20 10:51:43 PDT 2016 */
 	{ 0x0000, 0x001f }, /* Cc */
 	{ 0x007f, 0x009f }, /* Cc */
 	{ 0x00ad, 0x00ad }, /* Cf */
@@ -6,6 +6,7 @@
 	{ 0x061c, 0x061c }, /* Cf */
 	{ 0x06dd, 0x06dd }, /* Cf */
 	{ 0x070f, 0x070f }, /* Cf */
+	{ 0x08e2, 0x08e2 }, /* Cf */
 	{ 0x180e, 0x180e }, /* Cf */
 	{ 0x200b, 0x200f }, /* Cf */
 	{ 0x2028, 0x2028 }, /* Zl */
Index: less-481/wide.uni
===================================================================
--- less-481.orig/wide.uni
+++ less-481/wide.uni
@@ -1,81 +1,108 @@
-/* Generated by "./mkutable -f1 W -- unicode/EastAsianWidth.txt" on Mon Jul 14 16:21:23 PDT 2014 */
-	{ 0x1100, 0x1100 }, /* W */
+/* Generated by "./mkutable -f1 W F -- unicode/EastAsianWidth.txt" on Tue Sep 20 10:51:43 PDT 2016 */
+	{ 0x1100, 0x115f }, /* W */
+	{ 0x231a, 0x231b }, /* W */
 	{ 0x2329, 0x232a }, /* W */
-	{ 0x2e80, 0x2e80 }, /* W */
-	{ 0x2e9b, 0x2e9b }, /* W */
-	{ 0x2f00, 0x2f00 }, /* W */
-	{ 0x2ff0, 0x2ff0 }, /* W */
-	{ 0x3001, 0x3001 }, /* W */
-	{ 0x3004, 0x3012 }, /* W */
-	{ 0x3014, 0x301e }, /* W */
-	{ 0x3020, 0x3021 }, /* W */
-	{ 0x302a, 0x302a }, /* W */
-	{ 0x302e, 0x302e }, /* W */
-	{ 0x3030, 0x3031 }, /* W */
-	{ 0x3036, 0x3036 }, /* W */
-	{ 0x3038, 0x3038 }, /* W */
-	{ 0x303b, 0x303e }, /* W */
-	{ 0x3041, 0x3041 }, /* W */
-	{ 0x3099, 0x3099 }, /* W */
-	{ 0x309b, 0x309b }, /* W */
-	{ 0x309d, 0x309d }, /* W */
-	{ 0x309f, 0x30a1 }, /* W */
-	{ 0x30fb, 0x30fc }, /* W */
-	{ 0x30ff, 0x30ff }, /* W */
-	{ 0x3105, 0x3105 }, /* W */
-	{ 0x3131, 0x3131 }, /* W */
-	{ 0x3190, 0x3190 }, /* W */
-	{ 0x3192, 0x3192 }, /* W */
-	{ 0x3196, 0x3196 }, /* W */
-	{ 0x31a0, 0x31a0 }, /* W */
-	{ 0x31c0, 0x31c0 }, /* W */
-	{ 0x31f0, 0x31f0 }, /* W */
-	{ 0x3200, 0x3200 }, /* W */
-	{ 0x3220, 0x3220 }, /* W */
-	{ 0x322a, 0x322a }, /* W */
-	{ 0x3250, 0x3251 }, /* W */
-	{ 0x3260, 0x3260 }, /* W */
-	{ 0x3280, 0x3280 }, /* W */
-	{ 0x328a, 0x328a }, /* W */
-	{ 0x32b1, 0x32b1 }, /* W */
-	{ 0x32c0, 0x32c0 }, /* W */
-	{ 0x3300, 0x3300 }, /* W */
-	{ 0x3400, 0x3400 }, /* W */
-	{ 0x4db6, 0x4db6 }, /* W */
-	{ 0x4e00, 0x4e00 }, /* W */
-	{ 0x9fcd, 0x9fcd }, /* W */
-	{ 0xa000, 0xa000 }, /* W */
-	{ 0xa015, 0xa016 }, /* W */
-	{ 0xa490, 0xa490 }, /* W */
-	{ 0xa960, 0xa960 }, /* W */
-	{ 0xac00, 0xac00 }, /* W */
-	{ 0xf900, 0xf900 }, /* W */
-	{ 0xfa6e, 0xfa6e }, /* W */
-	{ 0xfa70, 0xfa70 }, /* W */
-	{ 0xfada, 0xfada }, /* W */
-	{ 0xfe10, 0xfe10 }, /* W */
-	{ 0xfe17, 0xfe19 }, /* W */
-	{ 0xfe30, 0xfe31 }, /* W */
-	{ 0xfe33, 0xfe33 }, /* W */
-	{ 0xfe35, 0xfe45 }, /* W */
-	{ 0xfe47, 0xfe49 }, /* W */
-	{ 0xfe4d, 0xfe4d }, /* W */
-	{ 0xfe50, 0xfe50 }, /* W */
-	{ 0xfe54, 0xfe54 }, /* W */
-	{ 0xfe58, 0xfe5f }, /* W */
-	{ 0xfe62, 0xfe64 }, /* W */
-	{ 0xfe68, 0xfe6a }, /* W */
-	{ 0x1b000, 0x1b000 }, /* W */
-	{ 0x1f200, 0x1f200 }, /* W */
-	{ 0x1f210, 0x1f210 }, /* W */
-	{ 0x1f240, 0x1f240 }, /* W */
-	{ 0x1f250, 0x1f250 }, /* W */
-	{ 0x20000, 0x20000 }, /* W */
-	{ 0x2a6d7, 0x2a6d7 }, /* W */
-	{ 0x2a700, 0x2a700 }, /* W */
-	{ 0x2b735, 0x2b735 }, /* W */
-	{ 0x2b740, 0x2b740 }, /* W */
-	{ 0x2b81e, 0x2b81e }, /* W */
-	{ 0x2f800, 0x2f800 }, /* W */
-	{ 0x2fa1e, 0x2fa1e }, /* W */
-	{ 0x30000, 0x30000 }, /* W */
+	{ 0x23e9, 0x23ec }, /* W */
+	{ 0x23f0, 0x23f0 }, /* W */
+	{ 0x23f3, 0x23f3 }, /* W */
+	{ 0x25fd, 0x25fe }, /* W */
+	{ 0x2614, 0x2615 }, /* W */
+	{ 0x2648, 0x2653 }, /* W */
+	{ 0x267f, 0x267f }, /* W */
+	{ 0x2693, 0x2693 }, /* W */
+	{ 0x26a1, 0x26a1 }, /* W */
+	{ 0x26aa, 0x26ab }, /* W */
+	{ 0x26bd, 0x26be }, /* W */
+	{ 0x26c4, 0x26c5 }, /* W */
+	{ 0x26ce, 0x26ce }, /* W */
+	{ 0x26d4, 0x26d4 }, /* W */
+	{ 0x26ea, 0x26ea }, /* W */
+	{ 0x26f2, 0x26f3 }, /* W */
+	{ 0x26f5, 0x26f5 }, /* W */
+	{ 0x26fa, 0x26fa }, /* W */
+	{ 0x26fd, 0x26fd }, /* W */
+	{ 0x2705, 0x2705 }, /* W */
+	{ 0x270a, 0x270b }, /* W */
+	{ 0x2728, 0x2728 }, /* W */
+	{ 0x274c, 0x274c }, /* W */
+	{ 0x274e, 0x274e }, /* W */
+	{ 0x2753, 0x2755 }, /* W */
+	{ 0x2757, 0x2757 }, /* W */
+	{ 0x2795, 0x2797 }, /* W */
+	{ 0x27b0, 0x27b0 }, /* W */
+	{ 0x27bf, 0x27bf }, /* W */
+	{ 0x2b1b, 0x2b1c }, /* W */
+	{ 0x2b50, 0x2b50 }, /* W */
+	{ 0x2b55, 0x2b55 }, /* W */
+	{ 0x2e80, 0x2e99 }, /* W */
+	{ 0x2e9b, 0x2ef3 }, /* W */
+	{ 0x2f00, 0x2fd5 }, /* W */
+	{ 0x2ff0, 0x2ffb }, /* W */
+	{ 0x3000, 0x3000 }, /* F */
+	{ 0x3001, 0x303e }, /* W */
+	{ 0x3041, 0x3096 }, /* W */
+	{ 0x3099, 0x30ff }, /* W */
+	{ 0x3105, 0x312d }, /* W */
+	{ 0x3131, 0x318e }, /* W */
+	{ 0x3190, 0x31ba }, /* W */
+	{ 0x31c0, 0x31e3 }, /* W */
+	{ 0x31f0, 0x321e }, /* W */
+	{ 0x3220, 0x3247 }, /* W */
+	{ 0x3250, 0x32fe }, /* W */
+	{ 0x3300, 0x4dbf }, /* W */
+	{ 0x4e00, 0xa48c }, /* W */
+	{ 0xa490, 0xa4c6 }, /* W */
+	{ 0xa960, 0xa97c }, /* W */
+	{ 0xac00, 0xd7a3 }, /* W */
+	{ 0xf900, 0xfaff }, /* W */
+	{ 0xfe10, 0xfe19 }, /* W */
+	{ 0xfe30, 0xfe52 }, /* W */
+	{ 0xfe54, 0xfe66 }, /* W */
+	{ 0xfe68, 0xfe6b }, /* W */
+	{ 0xff01, 0xff60 }, /* F */
+	{ 0xffe0, 0xffe6 }, /* F */
+	{ 0x16fe0, 0x16fe0 }, /* W */
+	{ 0x17000, 0x187ec }, /* W */
+	{ 0x18800, 0x18af2 }, /* W */
+	{ 0x1b000, 0x1b001 }, /* W */
+	{ 0x1f004, 0x1f004 }, /* W */
+	{ 0x1f0cf, 0x1f0cf }, /* W */
+	{ 0x1f18e, 0x1f18e }, /* W */
+	{ 0x1f191, 0x1f19a }, /* W */
+	{ 0x1f200, 0x1f202 }, /* W */
+	{ 0x1f210, 0x1f23b }, /* W */
+	{ 0x1f240, 0x1f248 }, /* W */
+	{ 0x1f250, 0x1f251 }, /* W */
+	{ 0x1f300, 0x1f320 }, /* W */
+	{ 0x1f32d, 0x1f335 }, /* W */
+	{ 0x1f337, 0x1f37c }, /* W */
+	{ 0x1f37e, 0x1f393 }, /* W */
+	{ 0x1f3a0, 0x1f3ca }, /* W */
+	{ 0x1f3cf, 0x1f3d3 }, /* W */
+	{ 0x1f3e0, 0x1f3f0 }, /* W */
+	{ 0x1f3f4, 0x1f3f4 }, /* W */
+	{ 0x1f3f8, 0x1f43e }, /* W */
+	{ 0x1f440, 0x1f440 }, /* W */
+	{ 0x1f442, 0x1f4fc }, /* W */
+	{ 0x1f4ff, 0x1f53d }, /* W */
+	{ 0x1f54b, 0x1f54e }, /* W */
+	{ 0x1f550, 0x1f567 }, /* W */
+	{ 0x1f57a, 0x1f57a }, /* W */
+	{ 0x1f595, 0x1f596 }, /* W */
+	{ 0x1f5a4, 0x1f5a4 }, /* W */
+	{ 0x1f5fb, 0x1f64f }, /* W */
+	{ 0x1f680, 0x1f6c5 }, /* W */
+	{ 0x1f6cc, 0x1f6cc }, /* W */
+	{ 0x1f6d0, 0x1f6d2 }, /* W */
+	{ 0x1f6eb, 0x1f6ec }, /* W */
+	{ 0x1f6f4, 0x1f6f6 }, /* W */
+	{ 0x1f910, 0x1f91e }, /* W */
+	{ 0x1f920, 0x1f927 }, /* W */
+	{ 0x1f930, 0x1f930 }, /* W */
+	{ 0x1f933, 0x1f93e }, /* W */
+	{ 0x1f940, 0x1f94b }, /* W */
+	{ 0x1f950, 0x1f95e }, /* W */
+	{ 0x1f980, 0x1f991 }, /* W */
+	{ 0x1f9c0, 0x1f9c0 }, /* W */
+	{ 0x20000, 0x2fffd }, /* W */
+	{ 0x30000, 0x3fffd }, /* W */
